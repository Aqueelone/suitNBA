package org.forsstudio.nbatestsuit.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class TeamInSeasonAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTeamInSeasonAllPropertiesEquals(TeamInSeason expected, TeamInSeason actual) {
        assertTeamInSeasonAutoGeneratedPropertiesEquals(expected, actual);
        assertTeamInSeasonAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTeamInSeasonAllUpdatablePropertiesEquals(TeamInSeason expected, TeamInSeason actual) {
        assertTeamInSeasonUpdatableFieldsEquals(expected, actual);
        assertTeamInSeasonUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTeamInSeasonAutoGeneratedPropertiesEquals(TeamInSeason expected, TeamInSeason actual) {
        assertThat(expected)
            .as("Verify TeamInSeason auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTeamInSeasonUpdatableFieldsEquals(TeamInSeason expected, TeamInSeason actual) {}

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertTeamInSeasonUpdatableRelationshipsEquals(TeamInSeason expected, TeamInSeason actual) {
        assertThat(expected)
            .as("Verify TeamInSeason relationships")
            .satisfies(e -> assertThat(e.getTeam()).as("check team").isEqualTo(actual.getTeam()))
            .satisfies(e -> assertThat(e.getSeason()).as("check season").isEqualTo(actual.getSeason()));
    }
}
